{"version":3,"sources":["api/index.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SearchBar/SearchBar.module.css","components/SearchBar/index.jsx","components/MoviePreview/index.jsx","components/MoviesItem/index.jsx","views/MoviesPageView.jsx"],"names":["apiKey","axios","defaults","baseURL","fetch","fetchTrendMovies","a","get","then","response","data","results","fetchMovieDetails","movieId","fetchMovies","query","fetchCast","cast","fetchReviews","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","module","exports","SearchBar","state","handleChange","evt","setState","currentTarget","handleSubmit","preventDefault","props","onSubmit","this","className","styles","SearchForm","type","SearchFormButton","SearchFormLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","MoviePreview","poster_path","title","src","alt","width","withRouter","movies","location","map","id","to","pathname","from","MoviesPageView","error","handleChangeQuery","apiServices","catch","prevProps","prevState","isLoading","message","color","height"],"mappings":"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","file":"static/js/4.2752d582.chunk.js","sourcesContent":["import axios from 'axios';\nconst apiKey = '62e550dd1865c74989dd777e4514ffe1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendMovies = async () => {\n  return await axios\n    .get(`trending/movie/day?api_key=${apiKey}`)\n    .then(response => response.data.results);\n};\n\nconst fetchMovieDetails = async movieId => {\n  return await axios\n    .get(`movie/${movieId}?api_key=${apiKey}&language=en-US`)\n    .then(response => response.data);\n};\n\nconst fetchMovies = async query => {\n  return await axios\n    .get(\n      `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    )\n    .then(response => response.data.results);\n};\n\nconst fetchCast = async movieId => {\n  return await axios\n    .get(`movie/${movieId}/credits?api_key=${apiKey}&language=en-US`)\n    .then(response => response.data.cast);\n};\n\nconst fetchReviews = async movieId => {\n  return await axios\n    .get(`/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`)\n    .then(response => response.data.results);\n};\n\nconst fetch = {\n  fetchTrendMovies,\n  fetchMovieDetails,\n  fetchMovies,\n  fetchCast,\n  fetchReviews,\n};\nexport default fetch;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__3ROT9\",\"SearchForm\":\"SearchBar_SearchForm__EPw4F\",\"SearchFormButton\":\"SearchBar_SearchFormButton__QlCLF\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__35xag\",\"SearchFormInput\":\"SearchBar_SearchFormInput__1NfUg\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.css';\n\nclass SearchBar extends Component {\nstate = { query: '' };\n\nhandleChange = evt => {\n        this.setState({ query: evt.currentTarget.value });\n      };\n\nhandleSubmit = evt => {\n        evt.preventDefault();\n        this.props.onSubmit(this.state.query);\n        this.setState({ query: '' });\n      };\n\nrender() {\n        const { query } = this.state;\n\n        return (\n          <header className={styles.SearchBar}>\n            <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n              <button type=\"submit\" className={styles.SearchFormButton}>\n                <span className={styles.SearchFormLabel}></span>\n              </button>\n\n              <input\n                className={styles.SearchFormInput}\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n                value={query}\n                onChange={this.handleChange}\n              />\n            </form>\n          </header>\n        );\n      }\n    }\n\n    SearchBar.propTypes = {\n      onSubmit: PropTypes.func.isRequired,\n    };\n\n    export default SearchBar;","import '../../App.css';\n\nconst MoviePreview = ({ poster_path, title }) => {\n  return (    \n      <div className=\"card\">\n        <img\n          src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n          alt={title}\n          width=\"250\"\n        />\n        <p className=\"title\">{title}</p>\n      </div>\n    \n  );\n};\n\nexport default MoviePreview;\n","import { Link, withRouter } from 'react-router-dom';\nimport MoviePreview from '../MoviePreview';\nimport '../../App.css';\n\nconst MoviesItem = ({ movies, location }) => {\n  return (   \n      <ul className=\"list\">\n        {movies.map(({ id, title, poster_path }) => (\n          <li className=\"item\" key={id}>\n            <Link\n              to={{\n                pathname: `/movies/${id}`,\n                state: {\n                  from: location,\n                },\n              }}\n            >\n              <MoviePreview poster_path={poster_path} title={title} />\n            </Link>\n          </li>\n        ))}\n      </ul>\n  \n  );\n};\n\nexport default withRouter(MoviesItem);\n","import { Component } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport apiServices from '../api';\nimport MoviesItem from '../components/MoviesItem';\nimport Loader from 'react-loader-spinner';\nimport '../App.css';\n\nclass MoviesPageView extends Component {\n  state = {\n    movies: [],\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.handleChangeQuery();\n    }\n  }\n  handleChangeQuery = query => {\n    apiServices\n      .fetchMovies(query)\n      .then(results => this.setState({ movies: results }))\n      .catch(error => this.setState(error));\n  };\n\n  render() {\n    const { movies, error, isLoading } = this.state;\n    return (\n      <>\n        {error && <h3 className=\"ErrorMessage\">{error.message}</h3>}\n        <SearchBar onSubmit={this.handleChangeQuery} />\n        {isLoading && (\n          <div className=\"Loader\">\n            <Loader type=\"Rings\" color=\"#000\" height={200} width={200} />\n          </div>\n        )}\n        {movies.length > 0 && <MoviesItem {...this.props} movies={movies} />}\n      </>\n    );\n  }\n}\n\nexport default MoviesPageView;\n"],"sourceRoot":""}