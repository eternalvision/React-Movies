{"version":3,"sources":["components/Reviews/ReviewsItem.jsx","components/Reviews/index.jsx"],"names":["ReviewsItem","author","content","Reviews","state","reviews","error","movieId","this","props","match","params","apiServices","fetchReviews","then","results","setState","catch","isLoading","className","type","color","height","width","length","map","id","message","Component"],"mappings":"mOAceA,EAXK,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OAChB,+BACI,0CAAaD,KACb,4BAAIC,QCANC,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,MAAO,M,uDAGT,WAAqB,IAAD,OACVC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRK,IACGC,aAAaN,GACbO,MAAK,SAAAC,GAAO,OAAI,EAAKC,SAAS,CAAEX,QAASU,OACzCE,OAAM,SAAAX,GAAK,OAAI,EAAKU,SAASV,Q,oBAGlC,WAAU,IAAD,EAC+BE,KAAKJ,MAAnCC,EADD,EACCA,QAASC,EADV,EACUA,MAAOY,EADjB,EACiBA,UAExB,OACE,qCACE,6BACGA,EACD,qBAAKC,UAAU,SAAf,SACA,cAAC,IAAD,CAAQC,KAAK,QAAQC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,QAErDlB,EAAQmB,OAAS,EACnBnB,EAAQoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,cAAC,EAAD,CAAsBD,OAAQA,EAAQC,QAASA,GAA7BwB,MAGtB,gDAICpB,GAAS,oBAAIa,UAAU,eAAd,SAA8Bb,EAAMqB,iB,GAjClCC,aA2CPzB","file":"static/js/8.1d76a056.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport '../../App.css';\n\nconst ReviewsItem = ({ author, content }) => (\n    <li>\n        <h5>Author: {author}</h5>\n        <p>{content}</p>\n    </li>\n);\n\nReviewsItem.propTypes = {\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n};\nexport default ReviewsItem;","import{ Component } from 'react';\nimport PropTypes from 'prop-types';\nimport apiServices from '../../api'; \nimport Loader from 'react-loader-spinner';\nimport ReviewsItem from './ReviewsItem';\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n    error: null,\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props.match.params;\n    apiServices\n      .fetchReviews(movieId)\n      .then(results => this.setState({ reviews: results }))\n      .catch(error => this.setState(error))\n      \n  }\n  render() {\n    const { reviews, error, isLoading } = this.state;\n\n    return (\n      <>       \n        <ul>\n          {isLoading ? (\n          <div className=\"Loader\">\n          <Loader type=\"Rings\" color=\"#00BFFF\" height={200} width={200} />\n          </div>\n          ) : reviews.length > 0 ? (\n            reviews.map(({ id, author, content }) => (\n              <ReviewsItem key={id} author={author} content={content} />\n            ))\n          ) : (\n          <span>No reviews</span>\n          )}\n               \n        </ul>\n          {error && <h3 className=\"ErrorMessage\">{error.message}</h3>}\n      </>\n    );\n  }\n}\n\nReviews.propTypes = {\n    movieId: PropTypes.string,\n};\n\nexport default Reviews;\n\n\n"],"sourceRoot":""}