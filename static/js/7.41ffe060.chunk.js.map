{"version":3,"sources":["components/Cast/CastItem.jsx","components/Cast/index.jsx"],"names":["CastItem","name","path","character","imgURL","className","src","alt","width","Cast","state","casts","error","movieId","this","props","match","params","apiServices","fetchCast","then","cast","setState","catch","isLoading","type","color","height","length","map","profile_path","cast_id","message","Component"],"mappings":"kNAsBeA,EAlBE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAEtBC,EADU,kCACSF,EAEzB,OACI,qBAAIG,UAAU,qBAAd,UACI,qBAAKC,IAAKF,EAAQG,IAAKN,EAAMI,UAAU,oBAAoBG,MAAM,QACjE,6BAAKP,IACL,4CAAeE,S,iBCLrBM,E,4MACFC,MAAQ,CACJC,MAAO,GACPC,MAAO,M,uDAGX,WAAqB,IAAD,OACRC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRK,IACKC,UAAUN,GACVO,MAAK,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAAEX,MAAOU,OACpCE,OAAM,SAAAX,GAAK,OAAI,EAAKU,SAASV,Q,oBAGtC,WAAU,IAAD,EAC+BE,KAAKJ,MAAjCC,EADH,EACGA,MAAOC,EADV,EACUA,MAAOY,EADjB,EACiBA,UAEtB,OACI,qCACI,oBAAInB,UAAU,eAAd,SACCmB,EACG,qBAAKnB,UAAU,SAAf,SACI,cAAC,IAAD,CAAQoB,KAAK,QAAQC,MAAM,UAAUC,OAAQ,IAAKnB,MAAO,QAE7DG,EAAMiB,OAAS,EACfjB,EAAMkB,KAAI,YAAiD,IAA9C5B,EAA6C,EAA7CA,KAAM6B,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,QAAS5B,EAAgB,EAAhBA,UACtC,OACI,cAAC,EAAD,CAEIF,KAAMA,EACNC,KAAM4B,EACN3B,UAAWA,GAHN4B,MAQT,6CAGPnB,GAAS,oBAAIP,UAAU,eAAd,SAA8BO,EAAMoB,iB,GAvC/CC,aAkDJxB","file":"static/js/7.41ffe060.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport '../../App.css';\n\n\nconst CastItem = ({ name, path, character }) => {\n    const baseURL = 'https://image.tmdb.org/t/p/w300';\n    const imgURL = baseURL + path;\n\n    return (\n        <li className=\"cast-gallery__item\">\n            <img src={imgURL} alt={name} className=\"cast-gallery__img\" width=\"150\" />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n        </li>\n    );\n};\n\nCastItem.propTypes = {\n    path: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n};\nexport default CastItem;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport apiServices from '../../api'; \nimport CastItem from './CastItem';\nimport Loader from 'react-loader-spinner';\nimport '../../App.css';\n\nclass Cast extends Component {\n    state = {\n        casts: [],\n        error: null,      \n    };\n\n    componentDidMount() {\n        const { movieId } = this.props.match.params;\n        apiServices\n            .fetchCast(movieId)\n            .then(cast => this.setState({ casts: cast }))\n            .catch(error => this.setState(error))\n          \n    }\n    render() {\n        const { casts, error, isLoading } = this.state;\n\n        return (\n            <>\n                <ul className=\"cast-gallery\">\n                {isLoading ? (\n                    <div className=\"Loader\">\n                        <Loader type=\"Rings\" color=\"#00BFFF\" height={200} width={200} />\n                    </div>\n                ) : casts.length > 0 ? (\n                    casts.map(({ name, profile_path, cast_id, character }) => {\n                        return (\n                            <CastItem\n                                key={cast_id}\n                                name={name}\n                                path={profile_path}\n                                character={character}\n                            />\n                        );\n                    })\n                ) : (\n                            <span>No cast</span>\n                            )}\n                    </ul>\n                    {error && <h3 className=\"ErrorMessage\">{error.message}</h3>}\n                    \n            </>\n        );\n    }\n}  \n\nCast.propTypes = {\n    movieId: PropTypes.string,\n};\n\nexport default Cast;"],"sourceRoot":""}